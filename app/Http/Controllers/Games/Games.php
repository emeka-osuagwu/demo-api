<?php

namespace App\Http\Controllers\Games;

/*
|--------------------------------------------------------------------------
| Service Namespace
|--------------------------------------------------------------------------
*/
use App\Services\GameService;

/*
|--------------------------------------------------------------------------
| Traits Namespace
|--------------------------------------------------------------------------
*/
use App\Traits\ResponseTrait;

/*
|--------------------------------------------------------------------------
| Illuminate Namespace
|--------------------------------------------------------------------------
*/
use App\Http\Controllers\Controller;

/*
|--------------------------------------------------------------------------
| Enums Namespace
|--------------------------------------------------------------------------
*/
use App\Enums\ResponseCodeEnums;

class Games extends Controller
{
    use ResponseTrait;

    /*
    |--------------------------------------------------------------------------
    | dependency injection
    |--------------------------------------------------------------------------
    */
    public function __construct
    (
        protected GameService $gameService
    ) {}

    /*
    |--------------------------------------------------------------------------
    | fetch games
    |--------------------------------------------------------------------------
    */
    public function __invoke()
    {
        /*
        |--------------------------------------------------------------------------
        | fetch games
        |--------------------------------------------------------------------------
        */
        $fetch_game_response = $this->gameService->getAll();

        /*
        |--------------------------------------------------------------------------
        | check if request failed
        |--------------------------------------------------------------------------
        */
        if (!$fetch_game_response['is_successful']) {
            return $this->sendResponse([], ResponseCodeEnums::GAME_SERVICE_REQUEST_ERROR);
        }

        /*
        |--------------------------------------------------------------------------
        | check if game not found
        |--------------------------------------------------------------------------
        */
        if (!count($fetch_game_response["response"])) {
            return $this->sendResponse([], ResponseCodeEnums::GAME_NOT_FOUND);
        }

        /*
        |--------------------------------------------------------------------------
        | send response
        |--------------------------------------------------------------------------
        */
        return $this->sendResponse($fetch_game_response["response"], ResponseCodeEnums::GAME_REQUEST_SUCCESSFUL);
    }
}
